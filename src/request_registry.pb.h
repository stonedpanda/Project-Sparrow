// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request_registry.proto

#ifndef PROTOBUF_request_5fregistry_2eproto__INCLUDED
#define PROTOBUF_request_5fregistry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace request_registry {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_request_5fregistry_2eproto();
void protobuf_AssignDesc_request_5fregistry_2eproto();
void protobuf_ShutdownFile_request_5fregistry_2eproto();

class Request;
class Registry;

// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();
  
  Request(const Request& from);
  
  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();
  
  void Swap(Request* other);
  
  // implements Message ----------------------------------------------
  
  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool active = 1;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 1;
  inline bool active() const;
  inline void set_active(bool value);
  
  // required string hash = 2;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 2;
  inline const ::std::string& hash() const;
  inline void set_hash(const ::std::string& value);
  inline void set_hash(const char* value);
  inline void set_hash(const char* value, size_t size);
  inline ::std::string* mutable_hash();
  inline ::std::string* release_hash();
  
  // required int32 timeout = 3;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 3;
  inline ::google::protobuf::int32 timeout() const;
  inline void set_timeout(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:request_registry.Request)
 private:
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_timeout();
  inline void clear_has_timeout();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* hash_;
  bool active_;
  ::google::protobuf::int32 timeout_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_request_5fregistry_2eproto();
  friend void protobuf_AssignDesc_request_5fregistry_2eproto();
  friend void protobuf_ShutdownFile_request_5fregistry_2eproto();
  
  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Registry : public ::google::protobuf::Message {
 public:
  Registry();
  virtual ~Registry();
  
  Registry(const Registry& from);
  
  inline Registry& operator=(const Registry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Registry& default_instance();
  
  void Swap(Registry* other);
  
  // implements Message ----------------------------------------------
  
  Registry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Registry& from);
  void MergeFrom(const Registry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .request_registry.Request request = 1;
  inline int request_size() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 1;
  inline const ::request_registry::Request& request(int index) const;
  inline ::request_registry::Request* mutable_request(int index);
  inline ::request_registry::Request* add_request();
  inline const ::google::protobuf::RepeatedPtrField< ::request_registry::Request >&
      request() const;
  inline ::google::protobuf::RepeatedPtrField< ::request_registry::Request >*
      mutable_request();
  
  // @@protoc_insertion_point(class_scope:request_registry.Registry)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::request_registry::Request > request_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_request_5fregistry_2eproto();
  friend void protobuf_AssignDesc_request_5fregistry_2eproto();
  friend void protobuf_ShutdownFile_request_5fregistry_2eproto();
  
  void InitAsDefaultInstance();
  static Registry* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// required bool active = 1;
inline bool Request::has_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_active() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_active() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool Request::active() const {
  return active_;
}
inline void Request::set_active(bool value) {
  set_has_active();
  active_ = value;
}

// required string hash = 2;
inline bool Request::has_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_hash() {
  if (hash_ != &::google::protobuf::internal::kEmptyString) {
    hash_->clear();
  }
  clear_has_hash();
}
inline const ::std::string& Request::hash() const {
  return *hash_;
}
inline void Request::set_hash(const ::std::string& value) {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  hash_->assign(value);
}
inline void Request::set_hash(const char* value) {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  hash_->assign(value);
}
inline void Request::set_hash(const char* value, size_t size) {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Request::mutable_hash() {
  set_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    hash_ = new ::std::string;
  }
  return hash_;
}
inline ::std::string* Request::release_hash() {
  clear_has_hash();
  if (hash_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hash_;
    hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 timeout = 3;
inline bool Request::has_timeout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_timeout() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_timeout() {
  timeout_ = 0;
  clear_has_timeout();
}
inline ::google::protobuf::int32 Request::timeout() const {
  return timeout_;
}
inline void Request::set_timeout(::google::protobuf::int32 value) {
  set_has_timeout();
  timeout_ = value;
}

// -------------------------------------------------------------------

// Registry

// repeated .request_registry.Request request = 1;
inline int Registry::request_size() const {
  return request_.size();
}
inline void Registry::clear_request() {
  request_.Clear();
}
inline const ::request_registry::Request& Registry::request(int index) const {
  return request_.Get(index);
}
inline ::request_registry::Request* Registry::mutable_request(int index) {
  return request_.Mutable(index);
}
inline ::request_registry::Request* Registry::add_request() {
  return request_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::request_registry::Request >&
Registry::request() const {
  return request_;
}
inline ::google::protobuf::RepeatedPtrField< ::request_registry::Request >*
Registry::mutable_request() {
  return &request_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace request_registry

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_5fregistry_2eproto__INCLUDED
